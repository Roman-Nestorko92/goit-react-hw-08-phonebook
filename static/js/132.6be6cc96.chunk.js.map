{"version":3,"file":"static/js/132.6be6cc96.chunk.js","mappings":"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","sources":["components/AddButton/AddButton.styled.js","components/AddButton/AddButton.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","hooks/useShowModal.js","components/Contact/Contact.styled.js","hooks/useDeletingContact.js","components/DeletingContact/DeletingContact.styled.js","components/DeletingContact/DeletingContact.jsx","components/Contact/Contact.jsx","hooks/useFiltredContacts.js","redux/contacts/contact-selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Message/Mesage.styled.js","components/Message/Message.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 270px;\n  height: 40px;\n  margin-bottom: 50px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  transition: background-color var(--main-hover-animation);\n\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n`;\n\nexport const ButtonText = styled.span`\n  margin-right: 10px;\n`;\n","import propTypes from 'prop-types';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { Button, ButtonText } from './AddButton.styled';\n\nfunction AddButton({ text }) {\n  return (\n    <Button to=\"/contacts/add\">\n      <ButtonText>{text}</ButtonText>\n      <BsFillPersonPlusFill size={20} />\n    </Button>\n  );\n}\n\nAddButton.prototype = {\n  text: propTypes.string,\n};\n\nexport default AddButton;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 50px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 95%;\n  height: 40px;\n  padding: 0 10px 0 10px;\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n  color: var(--main-text-color);\n  font-size: 14px;\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\nimport { Input, Label, Text } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" onChange={changeFieldFilter} name=\"filter\" />\n    </Label>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--backdrop-bg-color);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 280px;\n  height: auto;\n  padding: 10px;\n\n  background-color: var(--main-bg-color);\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    padding: 30px;\n  }\n  @media screen and (min-width: 1340px) {\n    padding: 50px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid var(--accent-bg-color);\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 35px;\n    padding-bottom: 25px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 900;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  transition: background-color var(--main-hover-animation);\n\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import propTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Backdrop, Button, ModalWrapper, Title, Wrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ children, onClose, title }) {\n  useEffect(() => {\n    const onPessKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPessKeyDown);\n\n    return () => window.removeEventListener('keydown', onPessKeyDown);\n  }, [onClose]);\n\n  const onBackDropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onBackDropClick}>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Button type=\"button\" onClick={onClose}>\n            <AiOutlineClose />\n          </Button>\n        </Wrapper>\n        {children}\n      </ModalWrapper>\n    </Backdrop>,\n    modalRoot\n  );\n}\n\nModal.prototype = {\n  children: propTypes.element,\n  onClose: propTypes.func.isRequired,\n  title: propTypes.string,\n};\n\nexport default Modal;\n","import { useState } from 'react';\n\nfunction useShowModal(option) {\n  const [showModal, setShowModal] = useState(option);\n  const toggleModal = () => setShowModal(prevState => !prevState);\n\n  return { toggleModal, showModal };\n}\n\nexport default useShowModal;\n","import styled from '@emotion/styled';\nimport { FaUser } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  background-color: #fafafa;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IconUser = styled(FaUser)`\n  background-color: var(--accent-bg-color);\n  color: var(--main-bg-color);\n  margin-right: 30px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--main-text-color);\n`;\n\nexport const Number = styled.p`\n  text-align: center;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n  transition: color var(--main-hover-animation);\n\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction useDeletingContact(id, name, toggleModal) {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    deleteContact(id);\n    navigate('/contacts');\n    toggleModal();\n    Notify.success(`The ${name} has been removed from your contact list.`);\n  };\n\n  return { isDeleting, deleteSelectedContact };\n}\n\nexport default useDeletingContact;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: red;\n`;\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  transition: background-color var(--main-hover-animation);\n\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: red;\n  color: var(--second-text-color);\n  transition: background-color var(--main-hover-animation);\n\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import propTypes from 'prop-types';\nimport useDeletingContact from 'hooks/useDeletingContact';\nimport { ButtonCancel, Item, List, Name, Text } from './DeletingContact.styled';\n\nfunction DeletingContact({ id, name, toggleModal }) {\n  const { isDeleting, deleteSelectedContact } = useDeletingContact(\n    id,\n    name,\n    toggleModal\n  );\n\n  return (\n    <>\n      <Text>\n        Are you sure you want delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={toggleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? '...' : 'Delete'}\n          </ButtonCancel>\n        </Item>\n      </List>\n    </>\n  );\n}\n\nDeletingContact.prototype = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  toggleModal: propTypes.func.isRequired,\n};\n\nexport default DeletingContact;\n","import PropTypes from 'prop-types';\nimport { FaTrash, FaUserEdit } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'components/Modal/Modal';\nimport useShowModal from 'hooks/useShowModal';\nimport {\n  Button,\n  ButtonItem,\n  ButtonList,\n  IconUser,\n  Name,\n  NameWrapper,\n  Number,\n  Wrapper,\n} from './Contact.styled';\nimport DeletingContact from 'components/DeletingContact/DeletingContact';\n\nfunction Contact({ id, name, number }) {\n  const { showModal, toggleModal } = useShowModal(false);\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal} title={name}>\n          <DeletingContact id={id} name={name} toggleModal={toggleModal} />\n        </Modal>\n      )}\n      <Wrapper>\n        <NameWrapper>\n          <IconUser />\n          <Name>{name}</Name>\n        </NameWrapper>\n\n        <Number>{number}</Number>\n\n        <ButtonList>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleModal}>\n              <FaTrash />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n              <FaUserEdit />\n            </Button>\n          </ButtonItem>\n        </ButtonList>\n      </Wrapper>\n    </>\n  );\n}\n\nContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contact-selectors';\n\nfunction useFiltredContacts() {\n  const { data: contacts } = useGetContactsQuery();\n  const { filter } = useSelector(state => getFilter(state));\n\n  const filtredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return { filteredContactList };\n}\n\nexport default useFiltredContacts;\n","export const getFilter = state => state.contacts;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n","import Contact from 'components/Contact/Contact';\nimport Loader from 'components/Loader/Loader';\nimport NotFound from 'components/NotFound/NotFound';\nimport useFiltredContacts from 'hooks/useFiltredContacts';\nimport { useEffect } from 'react';\nimport { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport { Item, List } from './ContactList.styled';\n\nfunction ContactList() {\n  const { data: contacts, isFetching, error, refetch } = useGetContactsQuery();\n  const { filteredContactList } = useFiltredContacts();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {error && <NotFound data={error.data} status={error.status} />}\n      <List>\n        {contacts &&\n          filteredContactList.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <Contact id={id} name={name} number={number} />\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import propTypes from 'prop-types';\nimport { Wrapper, Text } from './Mesage.styled';\n\nfunction Message({ message }) {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n}\n\nMessage.prototype = {\n  message: propTypes.string,\n};\n\nexport default Message;\n","import Container from 'components/Container/Container';\nimport AddButton from 'components/AddButton/AddButton';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Message from 'components/Message/Message';\nimport { useGetContactsQuery } from 'redux/contacts/contact-api';\n\nfunction ContactsPage() {\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <Container title={contacts}>\n      <AddButton text=\"Add new contact\" />\n      <Filter />\n      {contacts && contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Message message=\"Contact list is empty.\" />\n      )}\n    </Container>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["Button","styled","Link","ButtonText","AddButton","text","to","size","prototype","propTypes","Label","Text","Input","dispatch","useDispatch","type","onChange","e","value","currentTarget","changeFilter","name","Backdrop","ModalWrapper","Wrapper","Title","modalRoot","document","querySelector","Modal","children","onClose","title","useEffect","onPessKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","target","option","useState","showModal","setShowModal","toggleModal","prevState","NameWrapper","IconUser","FaUser","Name","Number","ButtonList","ButtonItem","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isLoading","deleteSelectedContact","Notify","List","Item","ButtonCancel","DeletingContact","useDeletingContact","Contact","number","useShowModal","PropTypes","contacts","useGetContactsQuery","data","filter","useSelector","state","getFilter","filteredContactList","normalizedFilter","toLowerCase","contact","includes","filtredContacts","isFetching","error","refetch","useFiltredContacts","Loader","NotFound","status","map","Message","message","Container","length"],"sourceRoot":""}